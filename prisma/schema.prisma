// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  name      String?
  password  String
  bills     Bill[]
  expenses  Expense[]
  createdAt DateTime @default(now())
}

model Bill {
  id          String    @id @default(uuid())
  amount      Int
  description String?
  categoryId  Int?
  userId      Int
  createdAt   DateTime @default(now())

  user        User      @relation(fields: [userId], references: [id])
  category    Category? @relation(name: "BillToCategory", fields: [categoryId], references: [id]) // Make category optional
}

model Expense {
  id          String    @id @default(uuid())
  amount      Int
  description String?
  categoryId  Int
  userId      Int
  transaction Transaction[]
  createdAt   DateTime @default(now())

  user        User      @relation(fields: [userId], references: [id])
  category    Category  @relation(name: "ExpenseToCategory", fields: [categoryId], references: [id])
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  bills     Bill[]    @relation(name: "BillToCategory")
  expenses  Expense[] @relation(name: "ExpenseToCategory")
  createdAt DateTime  @default(now())
}

model Transaction {
  id         String   @id @default(uuid())
  expenseId  String
  date       DateTime @default(now())
  createdAt  DateTime @default(now())

  expense    Expense  @relation(fields: [expenseId], references: [id])
}
